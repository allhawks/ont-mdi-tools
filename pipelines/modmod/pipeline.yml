---
pipeline:
    name: modmod
    description: "Train an ONT base modification model (modmod) using concatemerized oligos"
    # version: v0.0.1
# suiteVersions:
#     suiteName: v0.0.0 # use this version of a suite invoked as 'suite//module', etc. [latest]
actions: 
    _global:
        environment: modmod
        condaFamilies:
            - base
            - remora
    download:
        order: 1
        module: download
        override:
            ont-model: all
    basecall:
        order: 2
        module: basecall
        env-vars:
            duplex: false 
            emit-moves: true # for use by Remora
            align-reads: false
    split:
        order: 3
        optionFamilies:
            - mod-oligo-config
            - mod-oligo-search
        resources:
            required:
                total-ram: 32G
            recommended: 
                n-cpu: 16
                ram-per-cpu: 4G
        job-manager:
            recommended:
                time-limit: 36:00:00
        description: "prepare for modification model training by splitting concatemerized training reads"
    train:
        order: 4
        resources:
            required:
                total-ram: 2G
            recommended: 
                n-cpu: 1
                ram-per-cpu: 2G
        job-manager:
            recommended:
                time-limit: 4:00:00
        description: "train the prepared modification model using Remora"
# condaFamilies:
# optionFamilies:
# package:
#     uploadType: xxxx  # a signal to the Stage 2 framework regarding the package contents
#     packageAction: do # the pipeline action after which the package should assembled
#     files:
#         xxxx: # a contentFileType of any name you choose; 'manifestFile' has special meaning
#             type: xxxx # additional information as to the file type
#             file: $DATA_FILE_PREFIX.xxxx
#         manifestFile: # a sample manifest
#             type: manifest-file
#             manifestType: xxxx
#             file: $XXXX.xxxx
# container:
#     supported: false    
#     registry:  ghcr.io  # domain name of your OCI-compatible, oras-accessible, container registry [ghcr.io]
#     owner:     xxxxxxxx # REQUIRED: the name of the owner, e.g., user or organization, at 'registry'
#     installer: apt-get  # the installer program used by the container OS, typically apt-get or yum [apt-get]
